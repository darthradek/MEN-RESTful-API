openapi: 3.0.0
info:
  title: MEN REST API
  description: Qouted API Documentation
  version: 1.0.0
servers:
  - url: http://localhost:4000/api/
    description: Localhost development server 
  - url: https://smsj-men-restapi.herokuapp.com/api/
    description: Heroku remote server
components:
  securitySchemes:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: auth-token

  schemas:
    Quote:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        inStock:
          type: boolean
    
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        date:
          type: string

paths:

  /user/register:
    post:
      tags:
        - User
      summary: Register a new User
      description: Register a new User in the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"

      responses:
        201:
          description: User created succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  _id:
                    type: string

  /user/login:
    post:
      tags:
        - User
      summary: Login a User
      description: Login a User in order to get JWT token (auth-token)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      
      responses:
        200:
          description: User logged in succesfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  data:
                    type: string

  /quotes:
    get:
      tags: 
        - Quote
      summary: Retrieves a list of all quotes
      description: Retrieves a list of quotes as JSON objects.
      responses:
        200:
          description: A list of quote JSON objects in an array.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Quote"

    post:
      tags:
        - Quote
      summary: Create a new Quote
      description: Create a new Quote
      security:
        - ApiKeyAuth: []      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Quote"

      responses:
        201:
          description: Quote created succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quote"
  
  /quotes/{id}:
    get:
      tags:
        - Quote
      summary: Specific Quote
      description: Retrieves a specific Quote based on it id.
      parameters:
        - in: path
          name: id
          required: true
          description: MongoDB id
          schema:
            type: string
      responses:
        200:
          description: A Quote in the format of a JSON object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Quote"
   
    put:
      tags:
        - Quote
      summary: Updates a specific Quote
      description: Updates a specific Quote based on it's id
      security:
        - ApiKeyAuth: []            
      parameters:
        - in: path
          name: id
          required: true
          description: MongoDB id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Quote"

      responses:
        201:
          description: Quote updated succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quote"

    delete:
      tags:
        - Quote
      summary: Deletes a specific Quote
      description: Deletes a specific Quote based on it id
      security:
        - ApiKeyAuth: []            
      parameters:
        - in: path
          name: id
          required: true
          description: MongoDB id
          schema:
            type: string      

      responses:
        201:
          description: Quote deleted succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quote"